{"version":3,"sources":["api/firebase/index.js","store/profile/selectors.jsx","store/chats/actions.jsx","store/chats/reducer.jsx","store/chats/selectors.jsx","store/messages/actions.jsx","store/messages/reducer.jsx","store/messages/selectors.jsx","hocs/PublicRoute/index.jsx","hocs/PrivateRoute/index.jsx","components/Navigation/navigation.jsx","components/SignUp/index.jsx","store/messageForm/actions.jsx","store/messageForm/reducer.jsx","store/messageForm/selectors.jsx","components/ChatList/chatList.jsx","containers/ChatListContainer/index.jsx","components/BotPhrase/botPhrase.js","components/MessageForm/messageForm.jsx","utils/checkKeyOnEnter.jsx","containers/MessageFormContainer/index.jsx","utils/generateIdFromDate.js","components/RenderCurrentMessages/renderCurrentMessages.jsx","components/ChatsPanel/chatsPanel.jsx","pages/chats.jsx","components/Login/index.jsx","pages/main.jsx","store/profile/actions.jsx","pages/profile.jsx","api/firebase/uploadUserImage.js","store/covid19/actions.jsx","components/CountriesList/index.jsx","api/enpoints.js","api/lib/makeRequest.js","api/lib/attempt.js","api/requests/covid19Api.js","store/covid19/selectors.jsx","containers/CountriesListContainer/index.jsx","components/Statistics/index.jsx","store/covid19/statuses.jsx","containers/StatisticsContainer/index.jsx","components/Chart/index.jsx","containers/ChartContainer/index.jsx","pages/covid19.jsx","components/Routes/index.jsx","App.jsx","store/profile/reducer.jsx","store/covid19/reducer.jsx","store/index.jsx","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","database","firebaseStorage","storage","getProfileName","state","profile","name","getProfile","getCurrentUser","auth","currentUser","ADD_CHAT","REMOVE_CHAT","LOAD_CHATS","user","getFreeChatId","newChats","chatIdList","ref","uid","on","snapshot","forEach","entry","push","val","key","idNumber","slice","initialState","chatList","getChatList","chats","ADD_MESSAGE","REMOVE_MESSAGES","LOAD_MESSAGES","getPayloadFromSnapshot","messages","messageId","mes","chatId","createAddMessage","id","author","message","a","child","set","messageList","getMessageList","PublicRoute","authenticated","rest","PrivateRoute","to","pathname","useStyles","makeStyles","root","width","display","alignItems","justifyContent","background","height","navLink","color","marginRight","fontSize","fontFamily","fontWeight","lineHeight","letterSpacing","navLinkActive","Navigation","classes","className","links","activeClassName","SignUp","useState","open","setOpen","email","setEmail","password","setPassword","error","setError","handleClose","handleSubmit","e","createUserWithEmailAndPassword","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","value","onChange","target","label","type","fullWidth","DialogActions","Button","onClick","SHOW_MESSAGE_FORM","HIDE_MESSAGE_FORM","createShowMessageForm","createHideMessageForm","messageFormVisibility","getInputVisibility","messageForm","wrap","link","flexGrow","textDecoration","active","borderRadius","disable","ChatList","props","item","ListItem","button","changeMessageFormVisibility","ListItemIcon","Avatar","alt","src","avatar","ListItemText","primary","IconButton","deleteChat","ChatListContainer","useSelector","shallowEqual","dispatch","useDispatch","useParams","useCallback","event","parentElement","remove","payload","createRemoveMessages","map","generateBotPhrase","botPhrase","Math","round","random","length","position","bottom","messageFormHide","messageFormInput","messageFormButton","textAlign","MessageForm","inputVisibility","useEffect","hideMessageForm","showMessageForm","inputRef","React","createRef","current","focus","undefined","handleChange","onKeyDown","checkKey","sendUserMessage","checkKeyOnEnter","keyCode","MessageFormContainer","profileName","setValue","getBotName","filter","Date","now","toString","getState","botMessage","text","setTimeout","sendUserMessageWithThunk","displayName","code","RenderCurrentMessages","currentMessages","scrollHeight","max","document","body","documentElement","offsetHeight","clientHeight","window","scrollBy","exstractAuthor","exstractMessage","index","drawerWidth","theme","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","padding","mixins","content","flexDirection","minHeight","justifyItems","MiniDrawer","useTheme","plusChat","newChatName","Faker","firstName","image","CssBaseline","AppBar","clsx","Toolbar","edge","Drawer","variant","paper","Fab","direction","Divider","List","Chats","Login","signInWithEmailAndPassword","onAuthStateChanged","Main","style","CHANGE_USER_STATUS","CHANGE_USER_NAME","CHANGE_USER_IMAGE","CHANGE_USER_SRC_IMAGE","createChangeUserStatus","wrapUserData","minWidth","showName","whenTrueStatus","whenFalseStatus","srcImage","getDownloadURL","then","url","createChangeUserSrcImage","catch","alert","setShowName","setName","newName","updateProfile","console","writeFile","selectedFile","files","userUid","file","log","uploadTask","put","TaskEvent","STATE_CHANGED","progress","bytesTransferred","totalBytes","TaskState","PAUSED","RUNNING","downloadURL","uploadUserImage","placeholder","accept","FormControlLabel","control","Switch","checked","signOut","SELECT_COUNTRY","STATUS_COUNTRIES_LIST_REQUEST","STATUS_COUNTRIES_LIST_SUCCESS","STATUS_COUNTRIES_LIST_FAILURE","createSelectCountry","country","createCountriesListStatusRequest","createCountriesListStatusSuccess","data","createCountriesListStatusFailure","STATUS_SUMMARY_STATISTICS_REQUEST","STATUS_SUMMARY_STATISTICS_SUCCESS","STATUS_SUMMARY_STATISTICS_FAILURE","createSummaryStatisticsStatusRequest","createSummaryStatisticsStatusSuccess","createSummaryStatisticsStatusFailure","STATUS_DAY_ONE_ALL_REQUEST","STATUS_DAY_ONE_ALL_SUCCESS","STATUS_DAY_ONE_ALL_FAILURE","createDayOneAllRequest","createDayOneAllSuccess","createDayOneAllFailure","CountriesList","countriesList","Slug","Country","ISO2","API_ENDPOINT","endpoints","getSummary","getCountries","getDayOneAllStatus","makeRequest","config","fetch","join","response","json","attempt","result","warn","covid19Api","getSelectCountry","covid19","selectCountry","getCountriesList","getCountriesListLoadingStatus","countriesListLoadingStatus","getCountriesListError","countriesListError","getSummaryStatisticsData","summaryStatistics","getSummaryStatisticsLoadingStatus","summaryStatisticsLoadingStatus","getSummaryStatisticsError","summaryStatisticsError","getDayOneAllData","dayOneAll","getDayOneAllLoadingStatus","dayOneAllLoadingStatus","getDayOneAllError","dayOneAllError","CountriesListContainer","getCountriesWithThunk","api","Statistics","newConfirmed","totalConfirmed","newDeaths","totalDeaths","newRecovered","totalRecovered","STATUSES","StatisticsContainer","getSummaryStatisticsWithThunk","NewConfirmed","TotalConfirmed","NewDeaths","TotalDeaths","NewRecovered","TotalRecovered","currentCountry","Countries","Global","Chart","AreaChart","dayOneAllStatus","top","right","left","x1","y1","x2","y2","offset","stopColor","stopOpacity","XAxis","dataKey","YAxis","CartesianGrid","strokeDasharray","Tooltip","Area","stroke","fillOpacity","fill","ChartContainer","dayOneAllData","setCurrentCountry","getDayOneAllStatusWithThunk","checkSelectCountryAndDispatch","CircularProgress","Covid19","Routes","authed","setAuthed","get","chatsId","loadedChats","exact","path","App","datatype","uuid","rootReducer","combineReducers","action","newMessageList","persistConfig","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","persistReducer","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","StrictMode","loading","getElementById"],"mappings":"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","file":"static/js/main.1512655d.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\r\n}\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const db = firebase.database();\r\n\r\nexport const firebaseStorage = firebase.storage();\r\n","import firebase from \"firebase\";\r\n\r\nexport const getProfileName = state => state.profile.name;\r\n\r\nexport const getProfile = (state) => state.profile;\r\n\r\nexport const getCurrentUser = () => firebase.auth().currentUser;\r\n","import Faker from 'faker';\r\nimport { db } from '../../api/firebase';\r\n\r\nimport { getCurrentUser } from '../profile/selectors';\r\n\r\nexport const ADD_CHAT = \"ADD_CHAT\";\r\nexport const REMOVE_CHAT = \"REMOVE_CHAT\";\r\nexport const LOAD_CHATS = \"LOAD_CHATS\";\r\n\r\nconst user = () => getCurrentUser();\r\n\r\nconst getFreeChatId = () => {\r\n    const newChats = [];\r\n    const chatIdList = [];\r\n    db.ref(`chats/${user().uid}`).on(\"value\", (snapshot) => {\r\n\r\n        snapshot.forEach(entry => {\r\n            newChats.push(entry.val());\r\n            chatIdList.push(entry.key);\r\n        });\r\n    });\r\n\r\n    let idNumber = 0;\r\n    for (let item of chatIdList) {\r\n        if (item.slice(2) == idNumber) {\r\n            idNumber++;\r\n        }\r\n    }\r\n\r\n    return `id${idNumber}`\r\n};\r\n\r\nexport const createAddChat = (newChatName) => async (dispatch) => {\r\n    let chatId = getFreeChatId();\r\n    let name = Faker.name.firstName();\r\n    let avatar = Faker.image.avatar();\r\n\r\n    db.ref(`chats/${user().uid}`).child(chatId).child(\"name\").set(newChatName || name);\r\n    db.ref(`chats/${user().uid}`).child(chatId).child(\"avatar\").set(avatar);\r\n\r\n    dispatch({\r\n        type: ADD_CHAT,\r\n        payload: {\r\n            name: newChatName || name,\r\n            avatar: avatar,\r\n            id: chatId,\r\n        },\r\n    })\r\n};\r\n\r\nexport const createLoadChats = () => async (dispatch) => {\r\n    let snapshot = await db.ref(`chats/${user().uid}`).get();\r\n    \r\n    const chats = [];\r\n    const chatsId = [];\r\n    const loadedChats = [];\r\n\r\n    snapshot.forEach((item) => {\r\n        chats.push(item.val());\r\n        chatsId.push(item.key);       \r\n    });\r\n\r\n    for(let item in chats) {\r\n        loadedChats.push({\r\n            name: chats[item].name,\r\n            avatar: chats[item].avatar,\r\n            id: chatsId[item],\r\n        })        \r\n    }\r\n\r\n    dispatch({\r\n        type: LOAD_CHATS,\r\n        payload: loadedChats,\r\n    })\r\n}\r\n\r\nexport const createRemoveChat = (id) => async (dispatch) => {\r\n    db.ref(`chats/${user().uid}`).child(id).remove();\r\n    \r\n    dispatch({\r\n        type: REMOVE_CHAT,\r\n        payload: { id },\r\n    })\r\n};\r\n","import { ADD_CHAT, LOAD_CHATS, REMOVE_CHAT } from \"./actions\";\r\n\r\nconst initialState = {\r\n    chatList: [],\r\n};\r\n\r\nexport const chatsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_CHAT:            \r\n            return {\r\n                ...state,\r\n                chatList: [\r\n                    ...state.chatList,\r\n                    {\r\n                        id: action.payload.id,\r\n                        name: action.payload.name,\r\n                        avatar: action.payload.avatar,\r\n                    },\r\n                ],\r\n            };\r\n\r\n        case LOAD_CHATS: {\r\n            return {\r\n                ...state,\r\n                chatList: [\r\n                    ...action.payload,\r\n                ]\r\n            }\r\n\r\n        }\r\n\r\n        case REMOVE_CHAT:\r\n            return {                \r\n                chatList: [\r\n                    ...state.chatList.filter(item => item.id !== action.payload.id)\r\n                ]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const getChatList = (state) => state.chats.chatList;","import { db } from \"../../api/firebase\";\r\n\r\nimport { getCurrentUser } from \"../profile/selectors\";\r\n\r\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\r\nexport const REMOVE_MESSAGES = 'REMOVE_MESSAGES';\r\nexport const LOAD_MESSAGES = 'LOAD_MESSAGES';\r\n\r\nconst user = () => getCurrentUser();\r\n\r\nconst getPayloadFromSnapshot = (snapshot) => {\r\n    const messages = [];\r\n    const messageId = [];\r\n\r\n    snapshot.forEach((mes) => {\r\n        messages.push(mes.val());\r\n        messageId.push(mes.key);\r\n    });\r\n    \r\n    return {chatId: snapshot.key, messageId, messages};\r\n}\r\n\r\nexport const createLoadMessages = () => async (dispatch) => {\r\n    let snapshot = await db.ref(`messages/${user().uid}`).get();  \r\n\r\n    let payload = {};\r\n    const messages = [];\r\n\r\n    snapshot.forEach((item) => {        \r\n        messages.push(item.val())\r\n\r\n        payload = {\r\n            [item.key]: messages\r\n        }\r\n    })\r\n\r\n    dispatch({\r\n        type: LOAD_MESSAGES,\r\n        payload,\r\n    })\r\n}\r\n\r\nexport const createAddMessage = (chatId, id, author, message) => async () => {\r\n    db.ref(`messages/${user().uid}`).child(chatId).child(id).child(author).set(message);\r\n};\r\n\r\nexport const initMessageTracking = () => (dispatch) => {\r\n    db.ref(`messages/${user().uid}`).on(\"child_changed\", (snapshot) => {\r\n        const payload = getPayloadFromSnapshot(snapshot);\r\n        \r\n        dispatch({\r\n            type: ADD_MESSAGE,\r\n            payload,\r\n        });\r\n    });\r\n\r\n    db.ref(`messages/${user().uid}`).on(\"child_added\", (snapshot) => {\r\n        const payload = getPayloadFromSnapshot(snapshot);\r\n\r\n        dispatch({\r\n            type: ADD_MESSAGE,\r\n            payload,\r\n        })\r\n    })\r\n}\r\n\r\nexport const createRemoveMessages = (chatId) => async (dispatch) => {\r\n    db.ref(`messages/${user().uid}`).child(chatId).remove();\r\n\r\n    dispatch({\r\n        type: REMOVE_MESSAGES,\r\n        payload: {\r\n            chatId,\r\n        },\r\n    })\r\n}\r\n","import { ADD_MESSAGE, LOAD_MESSAGES, REMOVE_MESSAGES } from \"./actions\";\r\n\r\nconst initialState = {\r\n    messageList: {},\r\n};\r\n\r\nexport const messagesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                messageList: {\r\n                    ...state.messageList,\r\n                    [action.payload.chatId]: action.payload.messages,\r\n                    messageId: action.payload.messageId,\r\n                }                \r\n            };\r\n        }\r\n\r\n        case LOAD_MESSAGES: {            \r\n            return {                \r\n                ...state,\r\n                messageList: {\r\n                    [action.payload.chatId]: action.payload.messages,\r\n                    messageId: action.payload.messageId,\r\n                }         \r\n            }\r\n        }\r\n\r\n        case REMOVE_MESSAGES: {\r\n            let newMessageList = state.messageList;\r\n            delete newMessageList[action.payload.chatId];    \r\n            return {\r\n                ...state,\r\n                messageList: {\r\n                    ...newMessageList,\r\n                },\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const getMessageList = state => state.messages.messageList;","import { Route } from \"react-router-dom\";\r\n\r\nexport default function PublicRoute({ authenticated, ...rest}) {\r\n    return !authenticated ?\r\n    <Route { ...rest } /> :\r\n    <Route { ...rest } />;\r\n}","import { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport default function PrivateRoute({ authenticated, ...rest}) {\r\n    return authenticated ? \r\n    (<Route { ...rest }/>) :\r\n    (<Redirect to={{ pathname: \"/login\" }}/>)\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: `100%`,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        background: `#3f51b5`,\r\n        height: 64,\r\n    },\r\n    navLink: {\r\n        color: 'white',\r\n        marginRight: 10,\r\n        fontSize: `1.25rem`,\r\n        fontFamily: `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif`,\r\n        fontWeight: 500,\r\n        lineHeight: 1.6,\r\n        letterSpacing: `0.0075em`,\r\n    },\r\n    navLinkActive: {\r\n        fontWeight: 'bold',\r\n        color: `#282c34`,\r\n    }\r\n});\r\n\r\nexport default function Navigation() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.links}>\r\n                <NavLink activeClassName={classes.navLinkActive} className={classes.navLink} to=\"/main\">Main</NavLink>\r\n                <NavLink activeClassName={classes.navLinkActive} className={classes.navLink} to=\"/chats\">Chats</NavLink>\r\n                <NavLink activeClassName={classes.navLinkActive} className={classes.navLink} to=\"/profile\">Profile</NavLink>\r\n                <NavLink activeClassName={classes.navLinkActive} className={classes.navLink} to=\"/covid19\">COVID19</NavLink>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport firebase from 'firebase';\r\n\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField } from \"@material-ui/core\";\r\n\r\nexport const SignUp = () => {\r\n    const [open, setOpen] = useState(true);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleChangePassword = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n    const handleChangeEmail = (e) => {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        setError(\"\");\r\n        try {\r\n            await firebase.auth().createUserWithEmailAndPassword(email, password);\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Регистрация</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Заполните форму ниже, чтобы зарегистрировать новую учетную запись.\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        value={email}\r\n                        onChange={handleChangeEmail}\r\n                        id=\"email\"\r\n                        label=\"Email\"\r\n                        type=\"email\"\r\n                        fullWidth\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        value={password}\r\n                        onChange={handleChangePassword}\r\n                        id=\"password\"\r\n                        label=\"Пароль\"\r\n                        type=\"password\"\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        <Link to=\"/main\">Отмена</Link>\r\n                    </Button>\r\n                    <Button onClick={handleSubmit} color=\"primary\">\r\n                        <Link to=\"/login\">Подтвердить</Link>\r\n                    </Button>\r\n                </DialogActions>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {error && <p>{error}</p>}\r\n                        Уже зарегистрированны? <Link to=\"/login\">Войти</Link>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}","export const SHOW_MESSAGE_FORM = \"SHOW_MESSAGE_FORM\";\r\nexport const HIDE_MESSAGE_FORM = \"HIDE_MESSAGE_FORM\";\r\n\r\nexport const createShowMessageForm = () => ({\r\n    type: SHOW_MESSAGE_FORM,\r\n});\r\n\r\nexport const createHideMessageForm = () => ({\r\n    type: HIDE_MESSAGE_FORM,\r\n});\r\n","import { HIDE_MESSAGE_FORM, SHOW_MESSAGE_FORM } from \"./actions\"\r\n\r\nconst initialState = {\r\n    messageFormVisibility: false,\r\n}\r\n\r\nexport const messageFormReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SHOW_MESSAGE_FORM:\r\n            return {\r\n                ...state,\r\n                messageFormVisibility: true,\r\n            }\r\n\r\n        case HIDE_MESSAGE_FORM:\r\n            return {\r\n                ...state,\r\n                messageFormVisibility: false,\r\n            }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","export const getInputVisibility = state => state.messageForm.messageFormVisibility;","import { Link as RouterLink } from 'react-router-dom';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    wrap: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n    link: {\r\n        flexGrow: 2,\r\n        color: `rgba(0, 0, 0, 0.87)`,\r\n        textDecoration: `none`,\r\n    },\r\n    active: {\r\n        color: \"white\",\r\n        background: \"#282c34\",\r\n        borderRadius: 0,\r\n        '&:hover': {\r\n            background: \"#3f51b5\",\r\n        },\r\n    },\r\n    disable: {\r\n        color: \"#282c34\",\r\n        background: \"none\",\r\n        borderRadius: 0,\r\n        '&:hover': {\r\n            background: \"#3f51b5\",\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function ChatList(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n            <div className={classes.wrap} key={props.item.id}>\r\n                <RouterLink className={classes.link} to={`/chats/${props.item.id}`}>\r\n                    <ListItem className={props.item.id === props.chatId ? classes.active : classes.disable} button onClick={props.changeMessageFormVisibility} key={props.item.id}>\r\n                        <ListItemIcon>{<Avatar alt={props.item.name} src={props.item.avatar} />}</ListItemIcon>\r\n                        <ListItemText primary={props.item.name} />\r\n                    </ListItem>\r\n                </RouterLink>\r\n                <IconButton className={props.item.id === props.chatId ? classes.active : classes.disable} id={props.item.id} onClick={props.deleteChat} aria-label=\"delete\">\r\n                    <DeleteIcon id={props.item.id} fontSize=\"small\" />\r\n                </IconButton>\r\n            </div>\r\n        )  \r\n}","import { useCallback } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { shallowEqual } from \"react-redux\";\r\n\r\nimport { createRemoveChat } from '../../store/chats/actions';\r\nimport { createHideMessageForm, createShowMessageForm } from '../../store/messageForm';\r\nimport { getChatList } from '../../store/chats/selectors';\r\nimport { createRemoveMessages } from '../../store/messages';\r\n\r\nimport ChatList from '../../components/ChatList/chatList';\r\n\r\nexport default function ChatListContainer() {\r\n    const chats = useSelector(getChatList, shallowEqual);\r\n    const dispatch = useDispatch();\r\n    const { chatId } = useParams();\r\n\r\n    //удаление чата\r\n    const deleteChat = useCallback((event) => {\r\n        dispatch(createHideMessageForm())\r\n        dispatch(createRemoveChat(event.target.parentElement.id || event.target.id));\r\n        dispatch(createRemoveMessages(event.target.parentElement.id || event.target.id));\r\n    }, [dispatch]);\r\n\r\n    //меняет видимость поля ввода\r\n    const changeMessageFormVisibility = useCallback(() => {\r\n        dispatch(createShowMessageForm())\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        chats.map((item) => (\r\n            <ChatList\r\n                key={item.id} \r\n                item={item}\r\n                chatId={chatId}\r\n                changeMessageFormVisibility={changeMessageFormVisibility}\r\n                deleteChat={deleteChat}\r\n            />\r\n        ))\r\n    )\r\n}","function generateBotPhrase() {\r\n    const botPhrase = [\r\n        \"Не устал по кнопкам тыкать?\",\r\n        \"На всякий случай, если вдруг перенесусь в прошлое, держу в голове схему бензинового двигателя, формулы бензина, резины, пенициллина и легированной стали.\",\r\n        \"В махачкалинском кинотеатре даже попкорн готовят на мангале.\",    \r\n        \"Зa пocлeдниe 25 лeт вo фрaзe 'Maльчик в клубe cклeил мoдeль' измeнилocь знaчeниe вcex чeтырex cлoв.\",\r\n        \"Важен не размер зарплаты, а умение ей пользоваться.\",    \r\n        \"Свой нос не в своё дело сую только в двух случаях - когда надо и когда не надо...\",    \r\n        \"Из материалов уголовного дела : «С 2021 по 2031 год прятал у себя в подвале антипрививочника».\",\r\n        \"Сколково. Российскими учеными выведен отечественный коронавирус, который ни в чем не уступает зарубежным аналогам.\",\r\n        \"Почему все то, что хочется сожрать втихаря, завернуто в громко шелестящий целлофан?\",    \r\n        \"Половина жителей России поддержали обязательную вакцинацию другой половины жителей России.\",    \r\n        \"В Москве среди вакцинированных разыграют три деревни в Костромской области вместе с населением.\",    \r\n        \"Профессиональная танцовщица ищет партнера по классическому танцу. Не менуэт.\", \r\n        \"Помните мы когда-то пели: Умчи меня олень, в свою страну оленью? Оглянитесь вокруг. Вам не кажется, что он таки нас домчал?\",\r\n        \"Как стать владельцем малого бизнеса? Купить большой и ничего не делать.\", \r\n        \"Где гарантии, что завтра жизнь не станет ещё лучше?!\",    \r\n        \"Сколковские учёные испытали сверхзвуковой бумеранг! Они и моргнуть не успели.\",\r\n        \"Не хотелось бы выглядеть дураком, но не хочется слишком выделяться в вашей компании.\",    \r\n        \"Да какая я черствая? Меня можно легко размочить с помощью мартини!\",    \r\n        \"Машины никогда не заменят человека, так как они не умеют отдыхать.\",    \r\n        \"Ехал на дачу, поспорил с навигатором. Проспорил.\",    \r\n        \"Байден и Путин договорились о договоренности продолжать попытки договориться.\",    \r\n        \"Московский штам короновируса перед заражением проверяет прописку.\",    \r\n        \"По просьбам российских родителей в детскую экономическую игру 'Монополия' была добавлена взятка.\",    \r\n        \"Розы гибнут на газонах, пацаны в молодых дружных коллективах с офисом в центре города.\",    \r\n        \"Миллионы людей в нашей стране не умеют играть в футбол, но лишь игроки сборной делают это за такие большие деньги.\",    \r\n        \"- А вам не кажется несправедливым, что только одна компания выпускает игру 'Монополия'?..\",    \r\n        \"Люди, работающие в сфере услуг, должны иметь право подраться с одним клиентом в день.\",    \r\n        \"Наконец-то новости начинаются не с надоевшего коронавируса, а с более весёлых тем — взрыв, пожар, стрельба.\",    \r\n        \"- Мне срочно нужен новый счет в банке, потому что на старом кончились деньги.\",    \r\n        \"Дантист, говоришь? Ну расскажи 'Божественную комедию'.\",\r\n        \"Слабоалкогольные напитки - для слабых алкоголиков!\",\r\n        \"Никогда и не у кого ни проси орфографический словарь. Сами предложут и сами все додут.\",\r\n        \"Сбрендить - помешаться на брендовых вещах.\",\r\n        \"Молчание - золото. А потом появляются дети и молчание становится подозрительным.\",\r\n        \"Если долго сидеть на берегу реки, можно увидеть как по ней проплывают трупы антипрививочников. Японская мудрость.\",\r\n        \"Когда говорят о ненужности высшего образования, я отвечаю: 'А прикиньте, каким уютным и удобным был бы Фейсбук, если бы Цукерберг доучился.'\",\r\n        \"Если макароны варятся час и не жуются - возможно, это пачка пластиковых кабельных стяжек.\",\r\n        \"Бешеным строительством храмов по всей стране на каждом углу власть как бы намекает: 'На нас можете не надеяться. Молитесь! '.\",\r\n        \"Оказывается, первым таблица Менделеева приснилась Гоголю, но он в ней ни хрена не понял и сжег...\",\r\n        \"Из-за обвала криптовалют природа настолько очистилась, что в магазины начали возвращаться видеокарты.\",\r\n        \"Мир изменился: заказанная пицца приезжает быстрее вызванной скорой помощи.\",\r\n        \"Чтобы сделать российское шампанское белее изысканным и дорогим, его будут затыкать не обычной пробкой, а морковкой.\",\r\n        \"Секрет долголетия прост: надо как можно дольше не умирать.\",\r\n        \"Давайте говорить как петербуржцы:\",\r\n        \"Не администрация, а взятошная.\",\r\n        \"Фаберже был богатейшим ювелиром. Но грянула революция и большевики взяли его за яйца!\",\r\n        \"У нас на работе молодой и дружный коллектив. Теперь нужно кого-нибудь нанять, чтобы работал.\",\r\n        \"Глобальное потепление заключается в том, что все тепленькие места уже заняты.\",\r\n        \"Говорят, что те москвичи, которые не сделали прививки, будут выселены в Россию.\",\r\n        \"У пунктов вакцинации появились очереди. Это нищим россиянам запретили без прививок селиться в курортные отели и посещать ресторан.\",\r\n        \"Хочу на нудистский пляж. Буду стоять и нудеть.\",\r\n        \"На завод по производству сока «Добрый» не принимают на работу, пока не убьёшь трёх злых людей.\",\r\n        \"Сейчас кажется диким, что когда-то мы ели торт, на который кто-то дул... Хорошее было время!\",\r\n        \"Люди, которые покупают тушенку по 25 рублей и сосиски по 98 р за килограмм, отказываются вакцинироваться из за того, что не знают состав.\",\r\n        \"Меня часто упрекают, что я живу только в своё удовольствие.\",\r\n        \"Простите, а в чьё удовольствие я должен жить?!\",\r\n        \"Минус ремонта своими руками в том, что недостатки видишь, а руки оторвать некому.\",\r\n        \"Летом все люди делятся на две категории - те, кто любит море и те, кто ненавидит тех, кто любит море.\",\r\n        \"Если датский флаг совместить с английским, получится красное знамя.\",\r\n        \"Доброе дело надо делать внезапно, чтобы не догнали!\",\r\n        \"В мозгах современной молодёжи только то, что отображается на первых двух страницах поисковика.\",\r\n        \"Федор Конюхов вышел в магазин за хлебом, но не удержался и совершил очередную кругосветку.\",\r\n    ]\r\n\r\n    return (\r\n        botPhrase[Math.round(Math.random() * ((botPhrase.length - 1) - 0) + 0)]\r\n    )\r\n};\r\n\r\nexport default generateBotPhrase","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { getInputVisibility } from '../../store/messageForm/selectors';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    messageForm: {\r\n        display: 'flex',\r\n        position: 'fixed',\r\n        bottom: 0,\r\n        width: `calc(100vw - 240px)`\r\n    },\r\n    messageFormHide: {\r\n        display: 'none',\r\n    },\r\n    messageFormInput: {\r\n        flexGrow: 1,\r\n    },\r\n    messageFormButton: {\r\n        width: '20vw',\r\n        textAlign: 'center',\r\n    },\r\n}));\r\n\r\nfunction MessageForm(props) {\r\n    const classes = useStyles();\r\n    const inputVisibility = useSelector(getInputVisibility);\r\n    \r\n    //проверям видимость и присваиваем стили\r\n    const checkInputVisibility = () => {\r\n        if (!inputVisibility || props.chatId === undefined) {\r\n            return (classes.messageFormHide);\r\n        } else {\r\n            return (classes.messageForm);\r\n        }\r\n    };\r\n\r\n    //проверяется существует ли id введённый в url\r\n    useEffect(() => {\r\n        props.hideMessageForm()\r\n        for(let item of props.chatList) {\r\n            if(props.chatId === item.id) {              \r\n                props.showMessageForm()                \r\n            } \r\n        } \r\n    }, [props.chatId])\r\n\r\n    const inputRef = React.createRef();\r\n    //автофокус на поле ввода\r\n    useEffect(() => {\r\n        inputRef.current?.focus();\r\n    });\r\n\r\n    return (\r\n        <div className={checkInputVisibility()}>\r\n            <input ref={inputRef} className={classes.messageFormInput} type=\"text\" value={props.value} onChange={props.handleChange} onKeyDown={props.checkKey} />\r\n            <button className={classes.messageFormButton} type=\"button\" onClick={props.sendUserMessage}>Отправить</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageForm","//проверяем нажат ли энтер в поле ввода, если нажат отправляем сообщение\r\nexport const checkKeyOnEnter = (keyCode) => {\r\n    if (keyCode === \"Enter\") {\r\n        return true\r\n    };\r\n    return false\r\n}","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport firebase from \"firebase\";\r\n\r\nimport { createAddMessage, initMessageTracking } from '../../store/messages/actions';\r\nimport { getProfileName } from '../../store/profile/selectors';\r\nimport { createHideMessageForm, createShowMessageForm } from '../../store/messageForm';\r\nimport { getChatList } from '../../store/chats';\r\n\r\nimport generateBotPhrase from '../../components/BotPhrase/botPhrase';\r\nimport MessageForm from '../../components/MessageForm/messageForm';\r\n\r\nimport { checkKeyOnEnter } from '../../utils/checkKeyOnEnter';\r\nimport generateIdFromDate from '../../utils/generateIdFromDate';\r\n\r\nfunction MessageFormContainer() {\r\n    const profileName = useSelector(getProfileName);\r\n    const chatList = useSelector(getChatList);\r\n    const user = firebase.auth().currentUser;\r\n\r\n    const [value, setValue] = useState('');\r\n\r\n    const { chatId } = useParams();\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    }\r\n\r\n    const getBotName = () => {\r\n        let botData = chatList.filter((item) => item.id === chatId);\r\n        return botData[0].name\r\n    }\r\n\r\n    //ответ бота на каждое сообщение WithThunk\r\n    const sendUserMessageWithThunk = (chatId, id, author, message) => (dispatch, getState) => {\r\n        dispatch(createAddMessage(chatId, id, author, message));\r\n        if (author !== 'Бот') {                   \r\n            let botMessage = {\r\n                id: id + 1,\r\n                author: getBotName(),\r\n                text: generateBotPhrase(),\r\n            };\r\n            setTimeout(() => dispatch(createAddMessage(chatId, botMessage.id, botMessage.author, botMessage.text)), 1500);\r\n        }\r\n    };\r\n\r\n    //отправляем сообщение в хранилище WithThunk\r\n    const sendUserMessage = useCallback((message) => { \r\n        let messageId = generateIdFromDate();\r\n        dispatch(sendUserMessageWithThunk(chatId, messageId, user.displayName || profileName, message));\r\n        setValue('');\r\n    }, [chatId, dispatch, user.displayName, profileName]);\r\n\r\n    useEffect(() => {\r\n        dispatch(initMessageTracking());\r\n    }, []);\r\n\r\n    //проверяем нажат ли энтер в поле ввода, если нажат отправляем сообщение\r\n    const checkKey = (event) => {\r\n        if (checkKeyOnEnter(event.code)) {\r\n            sendUserMessage(value);\r\n        };\r\n    }\r\n    //скрыть форму\r\n    const hideMessageForm = () => {\r\n        dispatch(createHideMessageForm())\r\n    }\r\n\r\n    //показать форму\r\n    const showMessageForm = () => {\r\n        dispatch(createShowMessageForm())\r\n    }\r\n\r\n    return (\r\n        <MessageForm\r\n            chatId={chatId}\r\n            chatList={chatList}\r\n            value={value}\r\n            hideMessageForm={hideMessageForm}\r\n            showMessageForm={showMessageForm}\r\n            handleChange={handleChange}\r\n            checkKey={checkKey}\r\n            sendUserMessage={() => sendUserMessage(value)}\r\n        />\r\n    )\r\n}\r\n\r\nexport default MessageFormContainer","export default function generateIdFromDate() {\r\n    return Date.now().toString();\r\n} ","import { useEffect } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { getMessageList } from '../../store/messages';\r\n\r\nexport default function RenderCurrentMessages() {\r\n    const messageList = useSelector(getMessageList);\r\n\r\n    const { chatId } = useParams();\r\n\r\n    const currentMessages = messageList[chatId] || [];\r\n    \r\n    useEffect (() => {\r\n        let scrollHeight = Math.max(\r\n            document.body.scrollHeight, document.documentElement.scrollHeight,\r\n            document.body.offsetHeight, document.documentElement.offsetHeight,\r\n            document.body.clientHeight, document.documentElement.clientHeight\r\n        );\r\n        window.scrollBy(0,scrollHeight)\r\n    }, [chatId, currentMessages])\r\n\r\n    const exstractAuthor = (item) => {\r\n        for(let value in item) {\r\n            return value\r\n        }\r\n    }\r\n\r\n    const exstractMessage = (item) => {\r\n        for(let value in item) {\r\n            return item[value]\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <>{currentMessages.map((item, index) => <div key={messageList.messageId[index]}>{exstractAuthor(item)}: {exstractMessage(item)}</div>)}</>\r\n    )\r\n}\r\n","import { useCallback, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport { createAddChat } from '../../store/chats/actions';\r\n\r\nimport ChatListContainer from '../../containers/ChatListContainer';\r\nimport MessageFormContainer from '../../containers/MessageFormContainer';\r\n\r\nimport Navigation from '../Navigation/navigation';\r\nimport RenderCurrentMessages from '../RenderCurrentMessages/renderCurrentMessages'\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: `calc(100vw - ${drawerWidth}px)`,\r\n        minHeight: `calc(100vh - 64px)`,\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        background: `#282c34`,\r\n        color: `white`,\r\n        justifyContent: 'end',\r\n        justifyItems: 'end',\r\n    },\r\n}));\r\n\r\nexport default function MiniDrawer() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const { chatId } = useParams();\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n    //добавление нового чата\r\n    const plusChat = useCallback(() => {\r\n        dispatch(createAddChat());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, {\r\n                            [classes.hide]: open,\r\n                        })}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Navigation />\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    }),\r\n                }}\r\n            >\r\n                <div className={classes.toolbar}>\r\n                    <Fab onClick={plusChat} color=\"primary\" aria-label=\"add\">\r\n                        <AddIcon />\r\n                    </Fab>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                    <ChatListContainer />\r\n                </List>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n                {chatId ? <RenderCurrentMessages /> : \"\"}\r\n                <MessageFormContainer />\r\n            </main>\r\n        </div >\r\n    );\r\n}\r\n","import ChatsPanel from '../components/ChatsPanel/chatsPanel';\r\n\r\nfunction Chats() {    \r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <ChatsPanel />\r\n            </header>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chats;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport firebase from 'firebase';\r\n\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField } from \"@material-ui/core\";\r\n\r\n\r\nexport const Login = () => {\r\n    const [open, setOpen] = useState(false);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleChangePassword = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n    const handleChangeEmail = (e) => {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        setError(\"\");\r\n\r\n        try {\r\n            await firebase.auth().signInWithEmailAndPassword(email, password);\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n    \r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if(user) {\r\n                handleClose();\r\n            } else {\r\n                handleOpen();\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Вход</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Заполните форму ниже, чтобы войти в свою учетную запись.\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        value={email}\r\n                        onChange={handleChangeEmail}\r\n                        id=\"email\"\r\n                        label=\"Email\"\r\n                        type=\"email\"\r\n                        fullWidth\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        value={password}\r\n                        onChange={handleChangePassword}\r\n                        id=\"password\"\r\n                        label=\"Пароль\"\r\n                        type=\"password\"\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        <Link to=\"/main\">Отмена</Link>\r\n                    </Button>\r\n                    <Button onClick={handleSubmit} color=\"primary\">\r\n                        <Link to=\"/chats\">Подтвердить</Link>\r\n                    </Button>\r\n                </DialogActions>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {error && <p>{error}</p>}\r\n                        Ещё не зарегистрированны? <Link onClick={handleClose} to=\"/signup\">Зарегистрироваться</Link>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import { Login } from \"../components/Login\"\r\n\r\nexport default function Main() {\r\n    return (\r\n        <>\r\n            <h1 style={{ textAlign: 'center' }}>Главная страница</h1>\r\n            <Login />\r\n        </>\r\n    );\r\n};\r\n","import firebase from \"firebase\";\r\n\r\nexport const CHANGE_USER_STATUS = \"CHANGE_USER_STATUS\";\r\nexport const CHANGE_USER_NAME = \"CHANGE_USER_NAME\";\r\nexport const CHANGE_USER_IMAGE = \"CHANGE_USER_IMAGE\";\r\nexport const CHANGE_USER_SRC_IMAGE = \"CHANGE_USER_SRC_IMAGE\";\r\n\r\nexport const createChangeUserStatus = {\r\n    type: CHANGE_USER_STATUS,\r\n};\r\n\r\nexport const createChangeUserName = (newName) => async (dispatch) => {\r\n    try {\r\n        await firebase.auth().currentUser.updateProfile({\r\n            displayName: newName,\r\n        })\r\n    } catch(error) {\r\n        console.error(error);\r\n    }\r\n    dispatch({\r\n        type: CHANGE_USER_NAME,\r\n        payload: newName,        \r\n    })\r\n};\r\n\r\nexport const createChangeUserImage = (file) => ({\r\n    type: CHANGE_USER_IMAGE,\r\n    payload: file,\r\n});\r\n\r\nexport const createChangeUserSrcImage = (srcImage) => ({\r\n    type: CHANGE_USER_SRC_IMAGE,\r\n    payload: srcImage,\r\n});","import { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { shallowEqual } from \"react-redux\";\r\n\r\nimport firebase from \"firebase\";\r\nimport { firebaseStorage } from '../api/firebase';\r\n\r\nimport { createChangeUserStatus, createChangeUserName, createChangeUserImage, createChangeUserSrcImage } from '../store/profile/actions';\r\nimport { getCurrentUser, getProfile } from '../store/profile/selectors';\r\n\r\nimport { makeStyles } from '@material-ui/core';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nimport { checkKeyOnEnter } from '../utils/checkKeyOnEnter';\r\nimport uploadUserImage, { userImageURL } from '../api/firebase/uploadUserImage';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        height: 500,\r\n        borderRadius: `50%`,\r\n        margin: 50,\r\n    },\r\n    wrapUserData: {\r\n        minWidth: 200,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    }\r\n});\r\n\r\nexport default function Main() {\r\n    const classes = useStyles();\r\n    const { showName, whenTrueStatus, whenFalseStatus, name, image, srcImage } = useSelector(getProfile, shallowEqual);\r\n    const [value, setValue] = useState('');\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(getCurrentUser);\r\n\r\n\r\n    useEffect(() => {\r\n        firebaseStorage.ref(\"userPhoto\").child(user.uid).getDownloadURL()\r\n            .then((url) => {\r\n                dispatch(createChangeUserSrcImage(url))\r\n                // Insert url into an <img> tag to \"download\"\r\n            })\r\n            .catch((error) => {\r\n                // A full list of error codes is available at\r\n                // https://firebase.google.com/docs/storage/web/handle-errors\r\n                switch (error.code) {\r\n                    case 'storage/object-not-found':\r\n                        alert(\"Файл не существует\");\r\n                        // File doesn't exist\r\n                        break;\r\n                    case 'storage/unauthorized':\r\n                        alert(\"У пользователя нет разрешения на доступ к объекту\");\r\n                        // User doesn't have permission to access the object\r\n                        break;\r\n                    case 'storage/canceled':\r\n                        alert(\"Пользователь отменил загрузку\");\r\n                        // User canceled the upload\r\n                        break;\r\n\r\n                    // ...\r\n\r\n                    case 'storage/unknown':\r\n                        alert(\"Произошла неизвестная ошибка, проверьте ответ сервера\");\r\n                        // Unknown error occurred, inspect the server response\r\n                        break;\r\n                        \r\n                    default:\r\n                        alert (error.code);\r\n                }\r\n            });\r\n    }, [user.uid])\r\n\r\n    const logOut = () => {\r\n        firebase.auth().signOut().then(() => {\r\n            // Sign-out successful.\r\n        }).catch((error) => {\r\n            console.error(error);\r\n        });\r\n    }\r\n\r\n    const setShowName = useCallback(() => {\r\n        dispatch(createChangeUserStatus);\r\n    }, [dispatch]);\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    };\r\n\r\n    const setName = useCallback(() => {\r\n        dispatch(createChangeUserName(value));\r\n        setValue('');\r\n    }, [dispatch, value]);\r\n\r\n    //проверяем нажат ли энтер в поле ввода, если нажат отправляем сообщение\r\n    const checkKey = (event) => {\r\n        if (checkKeyOnEnter(event.code)) {\r\n            setName(value);\r\n        };\r\n    }\r\n\r\n    const writeFile = useCallback((event) => {\r\n        let selectedFile = event.target.files[0];\r\n        dispatch(createChangeUserImage(selectedFile));\r\n        uploadUserImage(user.uid, selectedFile);\r\n    }, [dispatch, user.uid]);\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.root}>\r\n                <img className={classes.avatar} src={srcImage} alt={user.displayName || name}></img>\r\n                <div className={classes.wrapUserData}>\r\n                    <div >Имя: {user.displayName || name}</div>\r\n                    <input type=\"text\" value={value} onChange={handleChange} placeholder=\"Вы можете изменить имя\" onKeyDown={checkKey} />\r\n                    <button onClick={setName}>Изменить имя</button>\r\n                    <div>\r\n                        <p><strong>Укажите картинку в формате JPEG, PNG или GIF</strong></p>\r\n                        <p>\r\n                            <input type=\"file\" name=\"img\" accept=\"image/jpeg,image/png,image/gif\" onChange={writeFile} />\r\n                        </p>\r\n                    </div>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Switch\r\n                                checked={showName}\r\n                                onChange={setShowName}\r\n                                name=\"checkedB\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label={showName ? <div>{whenTrueStatus}</div> : <div>{whenFalseStatus}</div>}\r\n                    />\r\n                    <button type=\"button\" onClick={logOut}>Выйти из аккаунта</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import firebase from \"firebase\";\r\nimport { firebaseStorage } from \".\";\r\n\r\nexport let userImageURL = undefined;\r\n\r\nexport default function uploadUserImage(userUid, file) {\r\n    console.log(userUid);\r\n    // Upload file and metadata to the object 'images/mountains.jpg'\r\n    let uploadTask = firebaseStorage.ref(\"userPhoto\").child(userUid).put(file);\r\n    \r\n    // Listen for state changes, errors, and completion of the upload.\r\n    uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n        (snapshot) => {\r\n            // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n            var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n            console.log('Upload is ' + progress + '% done');\r\n            switch (snapshot.state) {\r\n                case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n                    console.log('Upload is paused');\r\n                    break;\r\n                case firebase.storage.TaskState.RUNNING: // or 'running'\r\n                    console.log('Upload is running');\r\n                    break;\r\n            }\r\n        },\r\n        (error) => {\r\n            // A full list of error codes is available at\r\n            // https://firebase.google.com/docs/storage/web/handle-errors\r\n            switch (error.code) {\r\n                case 'storage/unauthorized':\r\n                    alert(\"У пользователя нет разрешения на доступ к объекту\")\r\n                    // User doesn't have permission to access the object\r\n                    break;\r\n                case 'storage/canceled':\r\n                    alert(\"Пользователь отменил загрузку\")\r\n                    // User canceled the upload\r\n                    break;\r\n    \r\n                    // ...\r\n    \r\n                case 'storage/unknown':\r\n                    alert(\"Произошла неизвестная ошибка, проверьте error.serverResponse\")\r\n                    // Unknown error occurred, inspect error.serverResponse\r\n                    break;\r\n                default:\r\n                    alert (error.code);\r\n            }\r\n        },\r\n        () => {\r\n            // Upload completed successfully, now we can get the download URL\r\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n                console.log('File available at', downloadURL);\r\n                userImageURL = downloadURL;\r\n            });\r\n        }\r\n    );\r\n}","export const SELECT_COUNTRY = 'SELECT_COUNTRY';\r\nexport const STATUS_COUNTRIES_LIST_REQUEST = \"STATUS_COUNTRIES_LIST_REQUEST\";\r\nexport const STATUS_COUNTRIES_LIST_SUCCESS = \"STATUS_COUNTRIES_LIST_SUCCESS\";\r\nexport const STATUS_COUNTRIES_LIST_FAILURE = \"STATUS_COUNTRIES_LIST_FAILURE\";\r\n\r\nexport const createSelectCountry = (country) => ({\r\n    type: SELECT_COUNTRY,\r\n    payload: country,\r\n});\r\n\r\nexport const createCountriesListStatusRequest = () => ({\r\n    type: STATUS_COUNTRIES_LIST_REQUEST,\r\n});\r\n\r\nexport const createCountriesListStatusSuccess = (data) => ({\r\n    type: STATUS_COUNTRIES_LIST_SUCCESS,\r\n    payload: data,\r\n});\r\n\r\nexport const createCountriesListStatusFailure = (error) => ({\r\n    type: STATUS_COUNTRIES_LIST_FAILURE,\r\n    payload: error,\r\n});\r\n\r\nexport const getCountries = (api) => async (dispatch) => {\r\n        dispatch(createCountriesListStatusRequest);\r\n        \r\n        const [error, data] = await api();\r\n        \r\n        if(error) {\r\n            dispatch(createCountriesListStatusFailure(error));\r\n        }\r\n\r\n        if(data) {\r\n            dispatch(createCountriesListStatusSuccess(data));\r\n        }\r\n}\r\n\r\nexport const STATUS_SUMMARY_STATISTICS_REQUEST = \"STATUS_SUMMARY_STATISTICS_REQUEST\";\r\nexport const STATUS_SUMMARY_STATISTICS_SUCCESS = \"STATUS_SUMMARY_STATISTICS_SUCCESS\";\r\nexport const STATUS_SUMMARY_STATISTICS_FAILURE = \"STATUS_SUMMARY_STATISTICS_FAILURE\";\r\n\r\nexport const createSummaryStatisticsStatusRequest = () => ({\r\n    type: STATUS_SUMMARY_STATISTICS_REQUEST,\r\n});\r\n\r\nexport const createSummaryStatisticsStatusSuccess = (data) => ({\r\n    type: STATUS_SUMMARY_STATISTICS_SUCCESS,\r\n    payload: data,\r\n});\r\n\r\nexport const createSummaryStatisticsStatusFailure = (error) => ({\r\n    type: STATUS_SUMMARY_STATISTICS_FAILURE,\r\n    payload: error,\r\n});\r\n\r\nexport const getSummaryStatistics = (api) => async (dispatch) => {\r\n        dispatch(createSummaryStatisticsStatusRequest);\r\n        \r\n        const [error, data] = await api();\r\n        \r\n        if(error) {\r\n            dispatch(createSummaryStatisticsStatusFailure(error));\r\n        }\r\n\r\n        if(data) {\r\n            dispatch(createSummaryStatisticsStatusSuccess(data));\r\n        }\r\n}\r\n\r\nexport const STATUS_DAY_ONE_ALL_REQUEST = \"STATUS_DAY_ONE_ALL_REQUEST\";\r\nexport const STATUS_DAY_ONE_ALL_SUCCESS = \"STATUS_DAY_ONE_ALL_SUCCESS\";\r\nexport const STATUS_DAY_ONE_ALL_FAILURE = \"STATUS_DAY_ONE_ALL_FAILURE\";\r\n\r\nexport const createDayOneAllRequest = () => ({\r\n    type: STATUS_DAY_ONE_ALL_REQUEST,\r\n});\r\n\r\nexport const createDayOneAllSuccess = (data) => ({\r\n    type: STATUS_DAY_ONE_ALL_SUCCESS,\r\n    payload: data,\r\n});\r\n\r\nexport const createDayOneAllFailure = (error) => ({\r\n    type: STATUS_DAY_ONE_ALL_FAILURE,\r\n    payload: error,\r\n});\r\n\r\nexport const getDayOneAllStatus = (api) => async (dispatch) => {\r\n        dispatch(createDayOneAllRequest);\r\n        \r\n        const [error, data] = await api();\r\n        \r\n        if(error) {\r\n            dispatch(createDayOneAllFailure(error));\r\n        }\r\n\r\n        if(data) {\r\n            dispatch(createDayOneAllSuccess(data));\r\n        }\r\n}","import { useEffect, useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createSelectCountry } from \"../../store/covid19/actions\";\r\n\r\nexport default function CountriesList(props) {\r\n    const [value, setValue] = useState();\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChange = (event) => {  \r\n        setValue(event.target.value);    \r\n        dispatch(createSelectCountry(event.target.value));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(value === undefined) {\r\n            dispatch(createSelectCountry(\"Global\"))\r\n        }        \r\n    }, [value])\r\n\r\n    return (\r\n        <select value={value} onChange={handleChange}>\r\n            <option key=\"Global\" value=\"Global\">Общая</option>\r\n            {props.countriesList.map((item) => <option key={item.ISO2} value={item.Slug}>{item.Country}</option>)}            \r\n        </select>\r\n    )\r\n}","export const API_ENDPOINT = 'https://api.covid19api.com/';\r\n\r\nexport const endpoints = {\r\n    getSummary: 'summary', // Сводка новых и общих случаев заболевания по стране обновляется ежедневно.\r\n    getCountries: 'countries', // Возвращает все доступные страны и провинции, а также краткую информацию о стране для запросов по странам.\r\n    getDayOneAllStatus: 'dayone/country/', //все статусы по дням, начиная с первого случая для конкретной страны\r\n};","import { API_ENDPOINT } from \"../enpoints\";\r\n\r\nexport const makeRequest = (url, config) => fetch (\r\n    [\r\n        API_ENDPOINT,\r\n        url,\r\n    ].join(''), config).then((response) => response.json()\r\n)\r\n","import { makeRequest } from \"./makeRequest\"\r\n\r\nexport const attempt = async (url, config) => {    \r\n    try {\r\n        const result = await makeRequest(url, config);\r\n        if(result.message === \"Not Found\") {\r\n            return [result, null];\r\n        } else {            \r\n            return [null, result];\r\n        }\r\n    } catch (e) {\r\n        console.warn(e);\r\n        return [e, null];\r\n    }\r\n}","import { endpoints } from \"../enpoints\";\r\nimport { attempt } from \"../lib/attempt\";\r\n\r\nexport const covid19Api = {\r\n    getSummary: async () => attempt(endpoints.getSummary),\r\n    getCountries: async () => attempt(endpoints.getCountries),\r\n    getDayOneAllStatus: async (country) => attempt([endpoints.getDayOneAllStatus, country].join('')),\r\n}","export const getSelectCountry = state => state.covid19.selectCountry;\r\nexport const getCountriesList = state => state.covid19.countriesList;\r\nexport const getCountriesListLoadingStatus = state => state.covid19.countriesListLoadingStatus;\r\nexport const getCountriesListError = (state) => state.covid19.countriesListError;\r\n\r\nexport const getSummaryStatisticsData = state => state.covid19.summaryStatistics;\r\nexport const getSummaryStatisticsLoadingStatus = state => state.covid19.summaryStatisticsLoadingStatus;\r\nexport const getSummaryStatisticsError = (state) => state.covid19.summaryStatisticsError;\r\n\r\nexport const getDayOneAllData = state => state.covid19.dayOneAll;\r\nexport const getDayOneAllLoadingStatus = state => state.covid19.dayOneAllLoadingStatus;\r\nexport const getDayOneAllError = (state) => state.covid19.dayOneAllError;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport CountriesList from \"../../components/CountriesList\";\r\n\r\nimport { covid19Api } from \"../../api\";\r\nimport { getCountries } from \"../../store/covid19/actions\";\r\nimport { getCountriesList, getCountriesListError, getCountriesListLoadingStatus } from \"../../store/covid19/selectors\";\r\n\r\nexport default function CountriesListContainer() {\r\n    const dispatch = useDispatch();\r\n    const countriesList = useSelector(getCountriesList);\r\n    const countriesListLoadingStatus = useSelector(getCountriesListLoadingStatus);\r\n    const countriesListError = useSelector(getCountriesListError);\r\n\r\n    const getCountriesWithThunk = () => {\r\n        dispatch(getCountries(covid19Api.getCountries));\r\n    }\r\n\r\n    const refresh = () => {\r\n        getCountriesWithThunk();\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCountriesWithThunk();\r\n    }, []);\r\n\r\n    if(countriesListLoadingStatus === 1) {\r\n        return (\r\n            <select>\r\n                <option>Загрузка...</option>\r\n            </select>\r\n        )\r\n    } else if (countriesListLoadingStatus === 3 || countriesListLoadingStatus === undefined) {\r\n        console.error(countriesListError);\r\n        return (\r\n            <div>\r\n                <h3>Ошибка загрузки</h3>\r\n                <button type=\"button\" onClick={refresh}>Перезагрузить</button>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    return (            \r\n        <CountriesList\r\n            countriesList={countriesList}\r\n        />            \r\n    )    \r\n}","export default function Statistics(props) {\r\n    return (\r\n        <div>            \r\n            <div>Новые подтверждённые случаи: {props.newConfirmed}</div>\r\n            <div>Всего подтверждённых случаев: {props.totalConfirmed}</div>\r\n            <div>Новые смерти: {props.newDeaths}</div>\r\n            <div>Всего смертей: {props.totalDeaths}</div>\r\n            <div>Новые выздоровевшие: {props.newRecovered}</div>\r\n            <div>Всего выздоровевших: {props.totalRecovered}</div>\r\n        </div>\r\n    )\r\n}","export const STATUSES = {\r\n    IDLE: 0,\r\n    REQUEST: 1,\r\n    SUCCESS: 2,\r\n    FAILURE: 3,\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Statistics from \"../../components/Statistics\";\r\n\r\nimport { covid19Api } from \"../../api\";\r\nimport { getSummaryStatistics } from \"../../store/covid19/actions\";\r\nimport { getSelectCountry, getSummaryStatisticsData, getSummaryStatisticsError, getSummaryStatisticsLoadingStatus } from \"../../store/covid19/selectors\";\r\nimport { STATUSES } from \"../../store/covid19/statuses\";\r\n\r\nexport default function StatisticsContainer() {\r\n    const dispatch = useDispatch();\r\n    const selectCountry = useSelector(getSelectCountry);\r\n    const summaryStatisticsLoadingStatus = useSelector(getSummaryStatisticsLoadingStatus);\r\n    const summaryStatistics = useSelector(getSummaryStatisticsData);\r\n    const summaryStatisticsError = useSelector(getSummaryStatisticsError);\r\n\r\n    const getSummaryStatisticsWithThunk = () => {\r\n        dispatch(getSummaryStatistics(covid19Api.getSummary));\r\n    }\r\n    const refresh = () => {\r\n        getSummaryStatisticsWithThunk();\r\n    }\r\n\r\n    useEffect(() => {\r\n        getSummaryStatisticsWithThunk();\r\n    }, []);\r\n\r\n    let data = {\r\n        NewConfirmed: \"нет данных\",\r\n        TotalConfirmed: \"нет данных\",\r\n        NewDeaths: \"нет данных\",\r\n        TotalDeaths: \"нет данных\",\r\n        NewRecovered: \"нет данных\",\r\n        TotalRecovered: \"нет данных\",\r\n    };\r\n\r\n    if (summaryStatisticsLoadingStatus === STATUSES.REQUEST) {\r\n        data = {\r\n            NewConfirmed: \"загрузка\",\r\n            TotalConfirmed: \"загрузка\",\r\n            NewDeaths: \"загрузка\",\r\n            TotalDeaths: \"загрузка\",\r\n            NewRecovered: \"загрузка\",\r\n            TotalRecovered: \"загрузка\",\r\n        };\r\n    } else if (summaryStatisticsLoadingStatus === STATUSES.FAILURE || summaryStatisticsLoadingStatus === undefined) {\r\n        console.error(summaryStatisticsError);\r\n        data = {\r\n            NewConfirmed: \"ошибка загрузки данных\",\r\n            TotalConfirmed: \"ошибка загрузки данных\",\r\n            NewDeaths: \"ошибка загрузки данных\",\r\n            TotalDeaths: \"ошибка загрузки данных\",\r\n            NewRecovered: \"ошибка загрузки данных\",\r\n            TotalRecovered: \"ошибка загрузки данных\",\r\n        };\r\n        return (\r\n            <div>\r\n                <h3>Ошибка загрузки</h3>\r\n                <button type=\"button\" onClick={refresh}>Перезагрузить</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (selectCountry !== \"Global\") {\r\n        const dataCountries = summaryStatistics.Countries;\r\n        const currentCountry = dataCountries.filter((item) => selectCountry === item.Slug);\r\n        if (currentCountry[0] !== undefined) {\r\n            data = currentCountry[0];\r\n        }\r\n    } else {\r\n        data = summaryStatistics.Global;\r\n    }\r\n\r\n    return (\r\n        <Statistics\r\n            newConfirmed={data.NewConfirmed}\r\n            totalConfirmed={data.TotalConfirmed}\r\n            newDeaths={data.NewDeaths}\r\n            totalDeaths={data.TotalDeaths}\r\n            newRecovered={data.NewRecovered}\r\n            totalRecovered={data.TotalRecovered}\r\n        />\r\n    )\r\n}","import { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\r\n\r\nexport default function Chart(props) {\r\n    return (\r\n        <AreaChart width={1000} height={250} data={props.dayOneAllStatus}\r\n            margin={{ top: 20, right: 30, left: 50, bottom: 0 }}>\r\n            <defs>\r\n                <linearGradient id=\"colorConfirmed\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                    <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8} />\r\n                    <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0} />\r\n                </linearGradient>\r\n                <linearGradient id=\"colorRecovered\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                    <stop offset=\"5%\" stopColor=\"#82ca9d\" stopOpacity={0.8} />\r\n                    <stop offset=\"95%\" stopColor=\"#82ca9d\" stopOpacity={0} />\r\n                </linearGradient>\r\n                <linearGradient id=\"colorDeaths\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                    <stop offset=\"5%\" stopColor=\"#ca82ac\" stopOpacity={0.8} />\r\n                    <stop offset=\"95%\" stopColor=\"#ca82ac\" stopOpacity={0} />\r\n                </linearGradient>\r\n            </defs>\r\n            <XAxis dataKey=\"Date\" />\r\n            <YAxis />\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <Tooltip />\r\n            <Area type=\"monotone\" dataKey=\"Confirmed\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorConfirmed)\" />\r\n            <Area type=\"monotone\" dataKey=\"Recovered\" stroke=\"#82ca9d\" fillOpacity={1} fill=\"url(#colorRecovered)\" />\r\n            <Area type=\"monotone\" dataKey=\"Deaths\" stroke=\"#ca82ac\" fillOpacity={1} fill=\"url(#colorDeaths)\" />\r\n        </AreaChart>\r\n    );\r\n}","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Chart from \"../../components/Chart\";\r\n\r\nimport { covid19Api } from \"../../api\";\r\nimport { getDayOneAllData, getDayOneAllError, getDayOneAllLoadingStatus, getSelectCountry } from \"../../store/covid19/selectors\";\r\nimport { getDayOneAllStatus } from \"../../store/covid19/actions\";\r\n\r\nexport default function ChartContainer() {\r\n    const dispatch = useDispatch();\r\n    const selectCountry = useSelector(getSelectCountry);\r\n    const dayOneAllLoadingStatus = useSelector(getDayOneAllLoadingStatus);\r\n    const dayOneAllError = useSelector(getDayOneAllError);\r\n    const dayOneAllData = useSelector(getDayOneAllData);\r\n    const[currentCountry, setCurrentCountry] = useState(\"russia\");\r\n\r\n    const getDayOneAllStatusWithThunk = () => {\r\n        dispatch(getDayOneAllStatus(() => covid19Api.getDayOneAllStatus(currentCountry)));\r\n    }\r\n\r\n    const checkSelectCountryAndDispatch = () => {\r\n        if(selectCountry !== \"Global\") {\r\n            setCurrentCountry(selectCountry);\r\n            \r\n            getDayOneAllStatusWithThunk(currentCountry)\r\n        } else {\r\n            setCurrentCountry(\"russia\");\r\n            getDayOneAllStatusWithThunk(currentCountry)\r\n        }\r\n    }\r\n\r\n    const refresh = () => {\r\n        checkSelectCountryAndDispatch();\r\n    }\r\n\r\n    useEffect(() => {\r\n        checkSelectCountryAndDispatch();\r\n    }, [selectCountry, currentCountry])\r\n    \r\n    if(dayOneAllLoadingStatus === 1) {\r\n        return <CircularProgress />\r\n    } else if (dayOneAllLoadingStatus === 3 || dayOneAllLoadingStatus === undefined) {\r\n        console.error(dayOneAllError);\r\n        return (\r\n            <div>\r\n                <h3>Ошибка загрузки</h3>\r\n                <button type=\"button\" onClick={refresh}>Перезагрузить</button>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <Chart \r\n            dayOneAllStatus={dayOneAllData || []}\r\n        />\r\n    )\r\n}","import CountriesListContainer from \"../containers/CountriesListContainer\";\r\nimport StatisticsContainer from \"../containers/StatisticsContainer\";\r\nimport ChartContainer from \"../containers/ChartContainer\";\r\n\r\nexport default function Covid19() {\r\n    return (\r\n        <>\r\n            <div>Статистика</div>\r\n            <CountriesListContainer />\r\n            <StatisticsContainer />\r\n            <ChartContainer />\r\n        </>\r\n    )\r\n};","import { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport firebase from 'firebase';\r\n\r\nimport { createLoadChats } from '../../store/chats';\r\nimport { createLoadMessages } from '../../store/messages';\r\n\r\nimport PublicRoute from '../../hocs/PublicRoute';\r\nimport PrivateRoute from '../../hocs/PrivateRoute';\r\n\r\nimport Navigation from '../Navigation/navigation';\r\nimport { SignUp } from '../SignUp';\r\n\r\nimport Chats from '../../pages/chats'\r\nimport Main from '../../pages/main';\r\nimport Profile from '../../pages/profile';\r\nimport Covid19 from '../../pages/covid19';\r\n\r\nexport const Routes = () => {\r\n    const [authed, setAuthed] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if(user) {\r\n                setAuthed(true);\r\n                dispatch(createLoadChats());\r\n                dispatch(createLoadMessages());\r\n            } else {\r\n                setAuthed(false);\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Navigation />\r\n            <Switch>\r\n                <PublicRoute authenticated={authed} exact path=\"/\">\r\n                    <Main />\r\n                </PublicRoute>\r\n                <PublicRoute authenticated={authed} exact path=\"/main\">\r\n                    <Main />\r\n                </PublicRoute>\r\n                <PublicRoute authenticated={authed} exact path=\"/login\">\r\n                    <Main />\r\n                </PublicRoute>\r\n                <PublicRoute authenticated={authed} exact path=\"/signup\">\r\n                    <SignUp />\r\n                </PublicRoute>               \r\n                <PrivateRoute authenticated={authed} exact path=\"/chats\">\r\n                    <Chats />\r\n                </PrivateRoute>\r\n                <PrivateRoute authenticated={authed} path=\"/chats/:chatId\">\r\n                    <Chats />\r\n                </PrivateRoute>\r\n                <PrivateRoute authenticated={authed} exact path=\"/profile\">\r\n                    <Profile />\r\n                </PrivateRoute>\r\n                <PublicRoute authenticated={authed} path=\"/covid19\">\r\n                    <Covid19 />\r\n                </PublicRoute>\r\n                <Route>\r\n                    <h3>Page not found</h3>\r\n                </Route>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}","import { Routes } from './components/Routes';\r\n\r\nexport default function App() {\r\n    return (\r\n        <Routes />\r\n    );\r\n};","import { CHANGE_USER_IMAGE, CHANGE_USER_NAME, CHANGE_USER_SRC_IMAGE, CHANGE_USER_STATUS } from \"./actions\";\r\nimport Faker from 'faker';\r\n\r\nconst initialState = {\r\n    showName: false,\r\n    whenTrueStatus: 'В сети',\r\n    whenFalseStatus: 'Не сети',\r\n    name: 'Аноним',\r\n    image: '',\r\n    srcImage: Faker.image.avatar(),\r\n    id: Faker.datatype.uuid(),\r\n};\r\n\r\nexport const profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_USER_STATUS:\r\n            return {\r\n                ...state,\r\n                showName: !state.showName,\r\n            }\r\n\r\n        case CHANGE_USER_NAME:\r\n            return {\r\n                ...state,\r\n                name: action.payload,\r\n            }\r\n\r\n        case CHANGE_USER_IMAGE:\r\n            return {\r\n                ...state,\r\n                image: action.payload,\r\n            }\r\n\r\n        case CHANGE_USER_SRC_IMAGE:\r\n            return {\r\n                ...state,\r\n                srcImage: action.payload,\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { SELECT_COUNTRY, STATUS_COUNTRIES_LIST_FAILURE, STATUS_COUNTRIES_LIST_REQUEST, STATUS_COUNTRIES_LIST_SUCCESS, STATUS_DAY_ONE_ALL_FAILURE, STATUS_DAY_ONE_ALL_REQUEST, STATUS_DAY_ONE_ALL_SUCCESS, STATUS_SUMMARY_STATISTICS_FAILURE, STATUS_SUMMARY_STATISTICS_REQUEST, STATUS_SUMMARY_STATISTICS_SUCCESS } from \"./actions\";\r\nimport { STATUSES } from \"./statuses\";\r\n\r\nconst initialState = {    \r\n    country: \"Global\",\r\n};\r\n\r\nexport const covid19Reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SELECT_COUNTRY: {            \r\n            return {\r\n                ...state,\r\n                selectCountry: action.payload,\r\n            };\r\n        }\r\n\r\n        case STATUS_COUNTRIES_LIST_REQUEST: {\r\n            return {\r\n                ...state,\r\n                countriesListLoadingStatus: STATUSES.REQUEST,\r\n            }\r\n        }\r\n\r\n        case STATUS_COUNTRIES_LIST_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                countriesList: action.payload,\r\n                countriesListLoadingStatus: STATUSES.SUCCESS,\r\n            }\r\n        }\r\n\r\n        case STATUS_COUNTRIES_LIST_FAILURE: {\r\n            return {\r\n                ...state,\r\n                countriesListLoadingStatus: STATUSES.FAILURE,\r\n                countriesListError: action.payload,\r\n            }\r\n        }\r\n\r\n        case STATUS_SUMMARY_STATISTICS_REQUEST: {\r\n            return {\r\n                ...state,\r\n                summaryStatisticsLoadingStatus: STATUSES.REQUEST,\r\n            }\r\n        }\r\n\r\n        case STATUS_SUMMARY_STATISTICS_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                summaryStatistics: action.payload,\r\n                summaryStatisticsLoadingStatus: STATUSES.SUCCESS,\r\n            }\r\n        }\r\n\r\n        case STATUS_SUMMARY_STATISTICS_FAILURE: {\r\n            return {\r\n                ...state,\r\n                summaryStatisticsLoadingStatus: STATUSES.FAILURE,\r\n                summaryStatisticsError: action.payload,\r\n            }\r\n        }\r\n\r\n        case STATUS_DAY_ONE_ALL_REQUEST: {\r\n            return {\r\n                ...state,\r\n                dayOneAllLoadingStatus: STATUSES.REQUEST,\r\n            }\r\n        }\r\n\r\n        case STATUS_DAY_ONE_ALL_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                dayOneAll: action.payload,\r\n                dayOneAllLoadingStatus: STATUSES.SUCCESS,\r\n            }\r\n        }\r\n\r\n        case STATUS_DAY_ONE_ALL_FAILURE: {\r\n            return {\r\n                ...state,\r\n                dayOneAllLoadingStatus: STATUSES.FAILURE,\r\n                dayOneAllError: action.payload,\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport { chatsReducer } from './chats';\r\nimport { messagesReducer } from './messages';\r\nimport { profileReducer } from './profile';\r\nimport { messageFormReducer } from './messageForm';\r\nimport { covid19Reducer } from './covid19'\r\n\r\nconst rootReducer = combineReducers({\r\n    chats: chatsReducer,\r\n    profile: profileReducer,\r\n    messages: messagesReducer,\r\n    messageForm: messageFormReducer,\r\n    covid19: covid19Reducer,\r\n});\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n};\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(persistReducer(persistConfig, rootReducer), composeEnhancers(\r\n    applyMiddleware(thunk),\r\n));\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from './App'\r\nimport './index.css';\r\nimport { persistor, store } from './store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}